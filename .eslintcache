[{"C:\\Users\\arthu\\Documents\\FACULDADE_2º_ano\\Programação_Web_2\\pw-app-final-frontend\\src\\index.js":"1","C:\\Users\\arthu\\Documents\\FACULDADE_2º_ano\\Programação_Web_2\\pw-app-final-frontend\\src\\App.js":"2"},{"size":239,"mtime":1611614333728,"results":"3","hashOfConfig":"4"},{"size":2635,"mtime":1611624763527,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"tyj0bp",{"filePath":"9","messages":"10","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\arthu\\Documents\\FACULDADE_2º_ano\\Programação_Web_2\\pw-app-final-frontend\\src\\index.js",[],["12","13"],"C:\\Users\\arthu\\Documents\\FACULDADE_2º_ano\\Programação_Web_2\\pw-app-final-frontend\\src\\App.js",["14","15","16","17"],"import react, { useState, useEffect } from \"react\";\nimport { Form, Card, Image, Icon } from \"semantic-ui-react\";\nimport \"./styles/AppStyle.css\";\n\nfunction App() {\n  const [name, setName] = useState('')\n  const [userName, setUsername] = useState('')\n  const [followers, setFollowers] = useState('')\n  const [following, setFollowing] = useState('')\n  const [repos, setRepos] = useState('')\n  const [avatar, setAvatar] = useState('')\n  const [userInput, setUserInput] = useState('')\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/example\")\n      .then(res => res.json())\n      .then(data => {\n        setData(data)\n      })\n  }, [])\n\n  const setData = ({\n    name,\n    login,\n    followers,\n    following,\n    public_repos,\n    avatar_url\n  }) => {\n    setName(name)\n    setUsername(login)\n    setFollowers(followers)\n    setFollowing(following)\n    setRepos(public_repos)\n    setAvatar(avatar_url)\n  }\n\n  const handleSearch = (e) => {\n    setUserInput(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    fetch(`https://api.github.com/users/${userInput}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.message) {\n          setError(data.message)\n        } else {\n          setData(data)\n          setError(null)\n        }\n      })\n  }\n\n  return (\n    <>\n      <div className='navbar'>Github Search</div>\n      <div className=\"search\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Input placeholder='GitHub user' name='github user'\n              onChange={handleSearch} />\n            <Form.Button content='Search' />\n          </Form.Group>\n        </Form>\n      </div>\n      { error ? (<h1>{error}</h1>) : (\n        <div className=\"card\">\n          <Card>\n            <Image src={avatar}\n              wrapped\n              ui={false}\n            />\n            <Card.Content>\n              <Card.Header>Nome: {name} </Card.Header>\n              <Card.Header>Username: {userName} </Card.Header>\n            </Card.Content>\n\n            <Card.Content extra>\n              <a>\n                <Icon name='user' />\n                {repos} Repositories\n            </a>\n            </Card.Content>\n\n            <Card.Content extra>\n              <a>\n                <Icon name='user' />\n                {followers} followers\n            </a>\n            </Card.Content>\n\n            <Card.Content extra>\n              <a>\n                <Icon name='user' />\n                {following} following\n            </a>\n            </Card.Content>\n          </Card>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n",{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","severity":1,"message":"23","line":1,"column":8,"nodeType":"24","messageId":"25","endLine":1,"endColumn":13},{"ruleId":"26","severity":1,"message":"27","line":81,"column":15,"nodeType":"28","endLine":81,"endColumn":18},{"ruleId":"26","severity":1,"message":"27","line":88,"column":15,"nodeType":"28","endLine":88,"endColumn":18},{"ruleId":"26","severity":1,"message":"27","line":95,"column":15,"nodeType":"28","endLine":95,"endColumn":18},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]